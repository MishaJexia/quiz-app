{"ast":null,"code":"var _jsxFileName = \"/home/lorenzo/MEGAsync/Web Dev/react/quiz_bee/src/components/QuestionBox.js\";\n// Creating the QuestionBox component\n// This renders questions text and a set of button to let the user pick an answer\n// The {useState} method allows to import states in a function component\nimport React, { useState } from 'react'; // Using a function component instead of a class component\n// Function components do not provide a state mgmt. features\n// This is ok in components that just need to display data or have simple interactions\n// Creating a js function named QuestionBox which brings in props using a single argument\n\nconst QuestionBox = ({\n  question,\n  options\n}) => {\n  // Setting initial value of answer variable to useState(options) from props\n  const [answer, setAnswer] = useState(options);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"questionBox\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"question\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 13\n    }\n  }, question), answer.map((text, index) => /*#__PURE__*/React.createElement(\"button\", {\n    key: index,\n    className: \"answerBtn\",\n    onClick: () => {},\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 17\n    }\n  }, text)));\n};\n\nexport default QuestionBox; // Should you need to incorporate state in a function component, there are hooks API","map":{"version":3,"sources":["/home/lorenzo/MEGAsync/Web Dev/react/quiz_bee/src/components/QuestionBox.js"],"names":["React","useState","QuestionBox","question","options","answer","setAnswer","map","text","index"],"mappings":";AAAA;AACA;AAEA;AACA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B,C,CAEA;AACA;AACA;AACA;;AACA,MAAMC,WAAW,GAAG,CAAC;AAACC,EAAAA,QAAD;AAAWC,EAAAA;AAAX,CAAD,KAAyB;AACzC;AACA,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBL,QAAQ,CAACG,OAAD,CAApC;AACA,sBACI;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA2BD,QAA3B,CADJ,EAKKE,MAAM,CAACE,GAAP,CAAW,CAACC,IAAD,EAAOC,KAAP,kBACR;AAAQ,IAAA,GAAG,EAAEA,KAAb;AAAoB,IAAA,SAAS,EAAC,WAA9B;AAA0C,IAAA,OAAO,EAAE,MAAM,CAAE,CAA3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKD,IADL,CADH,CALL,CADJ;AAaH,CAhBD;;AAkBA,eAAeN,WAAf,C,CAEA","sourcesContent":["// Creating the QuestionBox component\n// This renders questions text and a set of button to let the user pick an answer\n\n// The {useState} method allows to import states in a function component\nimport React, {useState} from 'react';\n\n// Using a function component instead of a class component\n// Function components do not provide a state mgmt. features\n// This is ok in components that just need to display data or have simple interactions\n// Creating a js function named QuestionBox which brings in props using a single argument\nconst QuestionBox = ({question, options}) => {\n    // Setting initial value of answer variable to useState(options) from props\n    const [answer, setAnswer] = useState(options);\n    return (\n        <div className=\"questionBox\"> \n            <div className=\"question\">{question}</div>\n            {/* This render a series of buttons */}\n            {/* Use map on answer variable to render a series of button */}\n            {/* Using onClick event listener property to run a function on that event*/}\n            {answer.map((text, index) => (\n                <button key={index} className=\"answerBtn\" onClick={() => {}}>  \n                    {text}\n                </button>\n            ))}\n        </div>\n    );\n};\n\nexport default QuestionBox;\n\n// Should you need to incorporate state in a function component, there are hooks API"]},"metadata":{},"sourceType":"module"}